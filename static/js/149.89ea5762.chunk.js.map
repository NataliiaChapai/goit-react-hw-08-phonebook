{"version":3,"file":"static/js/149.89ea5762.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {\r\n  useGetContactsQuery,\r\n  useAddContactsMutation,\r\n} from '../../redux/contacts/contactsApi';\r\n\r\nexport default function ContactForm() {\r\n  const { data: contacts } = useGetContactsQuery();\r\n  const [addContact, { isLoading }] = useAddContactsMutation();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInputChange = () => event => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      return Notify.warning(`${name} is already in the contact list`);\r\n    }\r\n\r\n    addContact({ name, number });\r\n    Notify.warning(`${name} was added to the contact list`);\r\n    resetForm();\r\n  };\r\n\r\n  function resetForm() {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <Card style={{ width: '500px', margin: '30px auto' }}>\r\n      <Card.Header as=\"h4\">Add new contact</Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label htmlFor=\"name\">Name</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Enter contact name\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleInputChange(name)}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n            <Form.Label htmlFor=\"number\">Number</Form.Label>\r\n            <Form.Control\r\n              placeholder=\"Enter phone number\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handleInputChange(name)}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n            {isLoading && <Spinner animation=\"border\" variant=\"primary\" />}\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\" disabled={isLoading}>\r\n            Add contact\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { filter, getFilter } from '../../redux/contacts/contactsSlice';\r\n\r\nexport default function Filter() {\r\n  const { name } = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onFilterInput = event => {\r\n    dispatch(filter(event.target.value));\r\n  };\r\n  return (\r\n    <Card style={{ width: '500px', margin: '30px auto' }}>\r\n      <Card.Header as=\"h4\">Searching Contacts</Card.Header>\r\n      <Card.Body>\r\n        <Form.Label>Find contacts by name</Form.Label>\r\n        <Form.Control\r\n          placeholder=\"Enter contact name\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={name}\r\n          onChange={onFilterInput}\r\n        />\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport { useRemoveContactsMutation } from '../../../redux/contacts/contactsApi';\n\nexport default function ContactItem({ id, name, number }) {\n  const [removeContact, { isLoading }] = useRemoveContactsMutation();\n  function onRemoveContact(id) {\n    removeContact(id);\n    Notify.warning(`The contact \"${name}\" was deleted`);\n  }\n\n  return (\n    <ListGroup.Item key={id}>\n      {isLoading && <Spinner animation=\"border\" variant=\"primary\" />}\n      <Row>\n        <Col>\n          <Card.Text style={{ textAlign: 'left' }}>{name}</Card.Text>\n          <Card.Text style={{ textAlign: 'left' }}>tel. {number}</Card.Text>\n        </Col>\n        <Col>\n          <Button\n            style={{ marginTop: '12px' }}\n            variant=\"primary\"\n            type=\"button\"\n            onClick={() => onRemoveContact(id)}\n          >\n            Delete\n          </Button>\n        </Col>\n      </Row>\n    </ListGroup.Item>\n  );\n}\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Card from 'react-bootstrap/Card';\nimport ContactItem from './ContactItem/ContactItem';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsApi';\nimport { getFilter } from '../../redux/contacts/contactsSlice';\n\nexport default function ContactList() {\n  const filterContact = useSelector(getFilter);\n  const { data: contacts, isSuccess } = useGetContactsQuery();\n\n  if (!isSuccess) {\n    return;\n  }\n\n  const formData = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterContact.toLowerCase())\n  );\n\n  return (\n    <Card style={{ width: '500px', margin: '30px auto' }}>\n      <Card.Header as=\"h4\">Contact List</Card.Header>\n      <Card.Body>\n        <ListGroup style={{ width: '470px', margin: '10px auto' }}>\n          {contacts &&\n            formData.map(({ id, name, number }) => (\n              <ContactItem key={id} id={id} name={name} number={number} />\n            ))}\n        </ListGroup>\n      </Card.Body>\n    </Card>\n  );\n}\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ContactForm from '../../ContactForm/ContactForm';\r\nimport Filter from '../../Filter/Filter';\r\nimport ContactList from '../../ContactList/ContactList';\r\n\r\nexport default function ContactsPage() {\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2>Phonebook</h2>\r\n      <Row>\r\n        <Col>\r\n          <ContactForm />\r\n          <Filter />\r\n        </Col>\r\n        <Col>\r\n          <ContactList />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n"],"names":["ContactForm","contacts","useGetContactsQuery","data","useAddContactsMutation","addContact","isLoading","useState","name","setName","number","setNumber","handleInputChange","event","target","value","Card","style","width","margin","as","Form","onSubmit","preventDefault","find","contact","Notify","className","htmlFor","placeholder","type","onChange","pattern","title","required","Spinner","animation","variant","Button","disabled","Filter","useSelector","getFilter","dispatch","useDispatch","filter","ListGroupItem","React","ref","bsPrefix","active","eventKey","action","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","ContactItem","id","useRemoveContactsMutation","removeContact","Row","Col","textAlign","marginTop","onRemoveContact","ContactList","filterContact","isSuccess","formData","toLowerCase","includes","map","ContactsPage","Container"],"sourceRoot":""}
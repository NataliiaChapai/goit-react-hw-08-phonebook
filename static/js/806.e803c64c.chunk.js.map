{"version":3,"file":"static/js/806.e803c64c.chunk.js","mappings":"sQAOe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,UAAC,IAAD,CAAMC,MAAO,CAACC,MAAO,QAASC,OAAQ,aAAtC,WACE,SAAC,WAAD,CAAaC,GAAG,KAAhB,uBACA,SAAC,SAAD,WACA,UAAC,IAAD,CAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACFlB,EAASmB,EAAAA,EAAAA,SAAwB,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBY,aAAa,MAA3C,WACA,SAAC,UAAD,CAAaC,UAAU,OAAOC,UAAU,gBAAxC,UACA,UAAC,UAAD,mBAEE,SAAC,YAAD,CAAcC,YAAY,aAAaC,KAAK,OAAOrB,KAAK,OAAOS,MAAO,CAACC,MAAO,SAAUF,MAAOR,EAAMsB,SAAUhB,UAG/G,SAAC,UAAD,CAAaY,UAAU,OAAOC,UAAU,iBAAxC,UACA,UAAC,UAAD,oBAEE,SAAC,YAAD,CAAcC,YAAY,cACxBC,KAAK,QACLrB,KAAK,QACLS,MAAO,CAACC,MAAO,SACfF,MAAON,EACPoB,SAAUhB,UAId,SAAC,UAAD,CAAaY,UAAU,OAAOC,UAAU,oBAAxC,UACA,UAAC,UAAD,uBAEE,SAAC,YAAD,CAAcC,YAAY,iBACxBC,KAAK,WACLrB,KAAK,WACLS,MAAO,CAACC,MAAO,SACfF,MAAOJ,EACPkB,SAAUhB,UAId,SAAC,IAAD,CAAQiB,QAAQ,UAAUF,KAAK,SAA/B","sources":["components/pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport authOperations from '../../../redux/auth/auth-operation';\r\n\r\nexport default function RegisterPage() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Card style={{width: '500px', margin: '30px auto'}}>\r\n      <Card.Header as=\"h2\">Register</Card.Header>\r\n      <Card.Body>\r\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\r\n      <Form.Group  className=\"mb-3\" controlId=\"formBasicText\">\r\n      <Form.Label>\r\n          Name\r\n        <Form.Control placeholder=\"Enter name\" type=\"text\" name=\"name\" style={{width: '400px'}} value={name} onChange={handleChange} />\r\n        </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group  className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>\r\n          Email\r\n          <Form.Control placeholder=\"Enter email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            style={{width: '400px'}}\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Label>\r\n        </Form.Group>\r\n        <Form.Group  className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>\r\n          Password\r\n          <Form.Control placeholder=\"Enter password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            style={{width: '400px'}}\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Label>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\">Register</Button>\r\n      </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}"],"names":["RegisterPage","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","style","width","margin","as","onSubmit","e","preventDefault","authOperations","autoComplete","className","controlId","placeholder","type","onChange","variant"],"sourceRoot":""}